#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
struct node{
    int val;
    struct node*next;
    };
 struct node* Get_Node(int val);
struct node*push(int val,struct node*top);
struct node*pop(struct node*top);
struct node*enqueue(struct node*rear,int val);
struct node*dequeue(struct node*front);
//declarations end here
struct node*Get_Node(int val){
    struct node*node=(struct node*)malloc(sizeof(struct node));
    node->val=val;
    node->next=NULL;
    assert(node->next==NULL);
    return node;
}
struct node*push(int val,struct node*top){
    struct node*temp;
    temp=Get_Node(val);
    if(top!=NULL)
        temp->next=top;
        top=temp;
        return top;
    }

struct node*pop(struct node*top){
    struct node*temp;
    if(top==NULL){
        assert(top==NULL);
        printf("stack underflow\n");}
    else{
        temp=top;
        top=top->next;
        free(temp);
        }
     return top;
}
struct node*enqueue(struct node*rear,int val){
 struct node*temp;
    temp=Get_Node(val);
    if(rear==NULL){
    assert(rear==NULL);
    rear=temp;
    }
    else{
    rear->next=temp;
    rear=temp;}
    return rear;
}
struct node*dequeue(struct node*front){
 struct node*temp;
    if(front==NULL){
        assert(front==NULL);
        printf("stack underflow\n");}
    else{
        temp=front;
        front=front->next;
        free(temp);
        }
     return front;
}
void display(struct node*);
void display(struct node*head){
struct node*temp=head;
    while(temp!=NULL){
        printf("%d |",temp->val);
        temp=temp->next;
    }
}
void main(){
struct node*rear=NULL;
struct node*front=NULL;
struct node*top=NULL;
top=push(1,top);
top=push(2,top);
top=push(3,top);
top=push(4,top);
top=push(5,top);
display(top);
printf("\n");
struct node*temp=top;
top=pop(top);
display(top);
rear=enqueue(rear,1);
front=rear;
rear=enqueue(rear,2);
rear=enqueue(rear,3);
rear=enqueue(rear,4);
rear=enqueue(rear,5);
printf("\n");
display(front);
printf("\n");
front=dequeue(front);
display(front);
}
    
